fileVersion: 1
id: SCALEFREE-DATAVAULT4COALESCE::1
macroString: |+
  {%- set datavault4coalesce = namespace(

       config = {
       "ldts_alias": "LDTS",
       "rsrc_alias": "RSRC", 
       "ledts_alias": "LEDTS", 
       "snapshot_trigger_column": "IS_ACTIVE",
       "sdts_alias": "SDTS",
       "is_current_col_alias": "IS_CURRENT", 
       "hash": "MD5", 
       "hash_datatype": "STRING", 
       "hash_input_case_sensitive": "TRUE",
       "hash_passthrough_input_transformations": "TRUE",
       "beginning_of_all_times": "0001-01-01T00:00:01", 
       "end_of_all_times": "8888-12-31T23:59:59",
       "timestamp_format": "YYYY-MM-DDTHH24:MI:SS", 
       "default_unknown_rsrc": "SYSTEM", 
       "default_error_rsrc": "ERROR", 
       "rsrc_default_dtype": "STRING", 
       "stg_default_dtype": "STRING", 
       "error_value__STRING": "'(error)'", 
       "error_value_alt__STRING": "'e'", 
       "unknown_value__STRING": "'(unknown)'",
       "unknown_value_alt__STRING": "'u'"
       }

  ) -%}


  {%- macro datavault4coalesce__string_to_timestamp(format, timestamp) -%}
      TO_TIMESTAMP('{{ timestamp }}', '{{ format }}')
  {%- endmacro -%}


  {%-macro record_source()-%}
  {#--USAGE:{{record_source()}}#}
  {#--NOTES:Adds a Record Source (name of qualified previous table/view)#}
  {%- if sources[0].dependencies -%}
       {% set src = storageLocations | selectattr('name', "equalto", sources[0].dependencies[0].node.location.name) | list | first %} 
       '"{{src.database}}"."{{src.schema}}"."{{sources[0].dependencies[0].node.name}}"'
  {%- else -%}
       'Missing Dependencies!'
  {%- endif -%}
  {%- endmacro -%}


  {%- macro datavault4coalesce__is_expression(obj) -%}

       {%- if obj is string -%}
            {%- if (obj|first == "'" and obj|last == "'") or ("(" in obj and ")" in obj) or "::" in obj or "||" in obj -%}
                 {{ true }}
            {%- else -%}
                 {{ false }}
            {%- endif -%}
       {%- else -%}
            {{ false }}
       {%- endif -%}

  {%- endmacro -%}


  {%- macro datavault4coalesce__escape_column_name(column) -%}

       {%- set escape_char_left  = '"' -%}
       {%- set escape_char_right = '"' -%}

       {%- set escaped_column_name = escape_char_left ~ column|upper|replace(escape_char_left, '')|replace(escape_char_right, '')|trim ~ escape_char_right|indent(4) -%}

       {{ escaped_column_name }}

  {%- endmacro -%}


  {%- macro datavault4coalesce__as_constant(column_str) -%}

       {%- if column_str is not none and column_str is string and column_str -%}
            {%- if column_str|first == "!" -%}
                 {{- "'" ~ column_str[1:] ~ "'" -}}
            {%- else -%}
                 {%- if datavault4coalesce__is_expression(column_str) -%}
                      {{- column_str -}}
                 {%- else -%}
                      {{- datavault4coalesce__escape_column_name(column_str) -}}
                 {%- endif -%}
            {%- endif -%}
       {%- endif -%}
  {%- endmacro -%}


  {%- macro datavault4coalesce__ghost_record_per_datatype(column_name, datatype, ghost_record_type, hash, hash_algo=none) -%}

  {%- set beginning_of_all_times = datavault4coalesce.config.beginning_of_all_times -%}
  {%- set end_of_all_times = datavault4coalesce.config.end_of_all_times -%}
  {%- set timestamp_format = datavault4coalesce.config.timestamp_format -%}
  {%- set unknown_value__STRING = datavault4coalesce.config.unknown_value__STRING -%}
  {%- set unknown_value_alt__STRING = datavault4coalesce.config.unknown_value_alt__STRING -%}
  {%- set error_value__STRING = datavault4coalesce.config.error_value__STRING -%}
  {%- set error_value_alt__STRING = datavault4coalesce.config.error_value_alt__STRING -%}

  {%- if hash %}

       {%- set datatype = datatype|upper -%}
       {%- set hash_alg = datavault4coalesce__hash_algorithm(hash_function=hash_algo, hash_datatype=datatype) -%}
       {%- set unknown_key = datavault4coalesce__unknown_key(hash_function=hash_algo, hash_datatype=datatype) -%}
       {%- set error_key = datavault4coalesce__error_key(hash_function=hash_algo, hash_datatype=datatype) -%}

       {%- if ghost_record_type == 'unknown' -%}
            {{ unknown_key }} as {{ column_name }}
       {%- elif ghost_record_type == 'error' -%}
            {{ error_key }} as {{ column_name }}
       {% endif %}

  {% else %}

       {%- if ghost_record_type == 'unknown' -%}
       {%- if datatype in ['TIMESTAMP_NTZ','TIMESTAMP', 'DATE'] -%}{{ datavault4coalesce__string_to_timestamp(timestamp_format, beginning_of_all_times) }} AS {{ column_name }}
       {% elif datatype.upper().startswith('STRING') or datatype.upper().startswith('VARCHAR') %}
            {%- if datatype.upper().startswith('VARCHAR') and datatype[8:-1]|int >= unknown_value__STRING|length -%} {{unknown_value__STRING}} AS {{ column_name }}
            {%- elif datatype.upper().startswith('STRING') -%} {{unknown_value__STRING}} AS {{ column_name }}
            {% else %} {{unknown_value_alt__STRING}} AS {{ column_name }}
            {% endif %}
       {% elif datatype in ['NUMBER','INT','FLOAT','DECIMAL'] or datatype.upper().startswith('NUMBER') %}0 AS {{ column_name }}
       {% elif datatype == 'BOOLEAN' %}CAST('FALSE' AS BOOLEAN) AS {{ column_name }}
       {% else %}NULL AS {{ column_name }}
       {% endif %}
       {%- elif ghost_record_type == 'error' -%}
       {%- if datatype in ['TIMESTAMP_NTZ','TIMESTAMP', 'DATE'] -%}{{ datavault4coalesce__string_to_timestamp(timestamp_format, end_of_all_times) }} AS {{ column_name }}
       {% elif datatype.upper().startswith('STRING') or datatype.upper().startswith('VARCHAR') %}
            {%- if datatype.upper().startswith('VARCHAR') and datatype[8:-1]|int >= error_value__STRING|length -%} {{error_value__STRING}} AS {{ column_name }}
            {%- elif datatype.upper().startswith('STRING') -%} {{error_value__STRING}} AS {{ column_name }}
            {% else %} {{error_value_alt__STRING}} AS {{ column_name }}
            {% endif %}
       {% elif datatype in ['NUMBER','INT','FLOAT','DECIMAL'] or datatype.upper().startswith('NUMBER') %}-1 AS {{ column_name }}
       {% elif datatype == 'BOOLEAN' %}CAST('FALSE' AS BOOLEAN) AS {{ column_name }}
       {% else %}NULL AS {{ column_name }}
       {% endif %}
       {%- endif -%}

  {%- endif -%}

  {%- endmacro -%}


  {%- macro datavault4coalesce__hash_algorithm(hash_function=none, hash_datatype=none) -%}

       {%- if hash_function is none -%}
            {%- set hash_function = datavault4coalesce.config.hash -%}
       {%- endif -%}
       {%- if hash_datatype is none -%}
            {%- set hash_datatype = datavault4coalesce.config.hash_datatype -%}
       {%- endif -%}  

       {%- set dict_result = {} -%}
       {%- set hash_alg = '' -%}

       {%- if hash_function == 'MD5' -%}
            {%- if 'VARCHAR' in hash_datatype or 'CHAR' in hash_datatype or 'STRING' in hash_datatype or 'TEXT' in hash_datatype %}
                 {%- set hash_alg = 'MD5' -%}
            {%- elif 'BINARY' in hash_datatype -%}
                 {%- set hash_alg = 'MD5_BINARY' -%}       
            {%- endif -%}
       {%- elif hash_function == 'SHA1' or hash_function == 'SHA1_HEX' or hash_function == 'SHA' -%} 
            {%- if 'VARCHAR' in hash_datatype or 'CHAR' in hash_datatype or 'STRING' in hash_datatype or 'TEXT' in hash_datatype %}
                 {%- set hash_alg = 'SHA1' -%}
            {%- elif 'BINARY' in hash_datatype -%}
                 {%- set hash_alg = 'SHA1_BINARY' -%}       
            {%- endif -%}
       {%- elif hash_function == 'SHA2' or hash_function == 'SHA2_HEX' or hash_function == 'SHA256' -%}
            {%- if 'VARCHAR' in hash_datatype or 'CHAR' in hash_datatype or 'STRING' in hash_datatype or 'TEXT' in hash_datatype %}
                 {%- set hash_alg = 'SHA2' -%}
            {%- elif 'BINARY' in hash_datatype -%}
                 {%- set hash_alg = 'SHA2_BINARY' -%}       
            {%- endif -%}   
       {%- endif -%}

       {{ hash_alg }}

  {%- endmacro -%}


  {%- macro datavault4coalesce__unknown_key(hash_function=none, hash_datatype=none) -%}
       {%- if hash_function is none -%}
            {%- set hash_function = datavault4coalesce.config.hash -%}
       {%- endif -%}
       {%- if hash_datatype is none -%}
            {%- set hash_datatype = datavault4coalesce.config.hash_datatype -%}
       {%- endif -%}     

       {%- set dict_result = {} -%}
       {%- set unknown_key = '' -%}

       {%- if hash_function == 'MD5' -%}
            {%- if 'VARCHAR' in hash_datatype or 'CHAR' in hash_datatype or 'STRING' in hash_datatype or 'TEXT' in hash_datatype %}
                 {%- set unknown_key = '!00000000000000000000000000000000' -%}
            {%- elif 'BINARY' in hash_datatype -%}  
                 {%- set unknown_key = "TO_BINARY('00000000000000000000000000000000')" -%}     
            {%- endif -%}                       
       {%- elif hash_function == 'SHA1' or hash_function == 'SHA1_HEX' or hash_function == 'SHA' -%} 
            {%- if 'VARCHAR' in hash_datatype or 'CHAR' in hash_datatype or 'STRING' in hash_datatype or 'TEXT' in hash_datatype %}
                 {%- set unknown_key = '!0000000000000000000000000000000000000000' -%}
            {%- elif 'BINARY' in hash_datatype -%}
                 {%- set unknown_key = "TO_BINARY('0000000000000000000000000000000000000000')" -%}     
            {%- endif -%}
       {%- elif hash_function == 'SHA2' or hash_function == 'SHA2_HEX' or hash_function == 'SHA256'  -%}
            {%- if 'VARCHAR' in hash_datatype or 'CHAR' in hash_datatype or 'STRING' in hash_datatype or 'TEXT' in hash_datatype %}
                 {%- set unknown_key = '!0000000000000000000000000000000000000000000000000000000000000000' -%}
            {%- elif 'BINARY' in hash_datatype -%}
                 {%- set unknown_key = "TO_BINARY('0000000000000000000000000000000000000000000000000000000000000000')" -%}  
            {%- endif -%}   
       {%- endif -%}

       {% set unknown_key = datavault4coalesce__as_constant(unknown_key) %}
       {{ unknown_key }}

  {%- endmacro -%}


  {%- macro datavault4coalesce__error_key(hash_function=none, hash_datatype=none) -%}
       {%- if hash_function is none -%}
            {%- set hash_function = datavault4coalesce.config.hash -%}
       {%- endif -%}
       {%- if hash_datatype is none -%}
            {%- set hash_datatype = datavault4coalesce.config.hash_datatype -%}
       {%- endif -%}  

       {%- set dict_result = {} -%}
       {%- set error_key = '' -%}

       {%- if hash_function == 'MD5' -%}
            {%- if 'VARCHAR' in hash_datatype or 'CHAR' in hash_datatype or 'STRING' in hash_datatype or 'TEXT' in hash_datatype %}
                 {%- set error_key = '!ffffffffffffffffffffffffffffffff' -%}
            {%- elif 'BINARY' in hash_datatype -%}  
                 {%- set error_key = "TO_BINARY('ffffffffffffffffffffffffffffffff')" -%}     
            {%- endif -%}          
       {%- elif hash_function == 'SHA1' or hash_function == 'SHA1_HEX' or hash_function == 'SHA' -%} 
            {%- if 'VARCHAR' in hash_datatype or 'CHAR' in hash_datatype or 'STRING' in hash_datatype or 'TEXT' in hash_datatype %}
                 {%- set error_key = '!ffffffffffffffffffffffffffffffffffffffff' -%}
            {%- elif 'BINARY' in hash_datatype -%}
                 {%- set error_key = "TO_BINARY('ffffffffffffffffffffffffffffffffffffffff')" -%}        
            {%- endif -%}
       {%- elif hash_function == 'SHA2' or hash_function == 'SHA2_HEX' or hash_function == 'SHA256'  -%}
            {%- if 'VARCHAR' in hash_datatype or 'CHAR' in hash_datatype or 'STRING' in hash_datatype or 'TEXT' in hash_datatype %}
                 {%- set error_key = '!ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' -%}
            {%- elif 'BINARY' in hash_datatype -%}
                 {%- set error_key = "TO_BINARY('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')" -%}        
            {%- endif -%}   
       {%- endif -%}

       {% set error_key = datavault4coalesce__as_constant(error_key) %}
       {{ error_key }}

  {%- endmacro -%}


  {%- macro datavault4coalesce__is_something(obj) -%}

      {%- if obj is not none and obj is defined and obj -%}
          {{ true }}
      {%- else -%}
          {{ false }}
      {%- endif -%}

  {%- endmacro -%}


  {%- macro datavault4coalesce__attribute_standardise() -%}

  CONCAT('\"', REPLACE(REPLACE(REPLACE(TRIM(CAST([EXPRESSION] AS STRING)), '\\', '\\\\'), '[QUOTE]', '\"'), '[NULL_PLACEHOLDER_STRING]', '--'), '\"')

  {%- endmacro -%}


  {%- macro datavault4coalesce__standardise_prefix(case_sensitive, hash_alg, datatype, zero_key, alias) -%}

  {%- set dict_result = {} -%}

  {%- set zero_key = datavault4coalesce__as_constant(column_str=zero_key) -%}

  {%- if 'VARCHAR' in datatype or 'CHAR' in datatype or 'STRING' in datatype or 'TEXT' in datatype %}

      {%- if case_sensitive -%}
          
          {%- set standardise_prefix = "COALESCE(LOWER({}(NULLIF(CAST(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(UPPER(CONCAT(".format(hash_alg)-%}

      {%- else -%}
          
          {%- set standardise_prefix = "COALESCE(LOWER({}(NULLIF(CAST(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(".format(hash_alg)-%}

      {%- endif -%}

  {%- else -%}

      {%- if case_sensitive -%}
          
          {%- set standardise_prefix = "COALESCE({}(NULLIF(CAST(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(UPPER(CONCAT(".format(hash_alg)-%}

      {%- else -%}
          
          {%- set standardise_prefix = "COALESCE({}(NULLIF(CAST(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(".format(hash_alg)-%}

      {%- endif -%}

  {%- endif -%}

  {{ standardise_prefix }}

  {%- endmacro -%}


  {%- macro datavault4coalesce__standardise_suffix(case_sensitive, hash_alg, datatype, zero_key, alias) -%}

  {%- set dict_result = {} -%}

  {%- set zero_key = datavault4coalesce__as_constant(column_str=zero_key) -%}

  {%- if 'VARCHAR' in datatype or 'CHAR' in datatype or 'STRING' in datatype or 'TEXT' in datatype %}

      {%- if case_sensitive -%}
   
          {%- if alias is not none -%}
              {%- set standardise_suffix = "\n)), '\\n', '') \n, '\\t', '') \n, '\\v', '') \n, '\\r', '') AS STRING), '[ALL_NULL]'))), {}) AS {}".format(zero_key, alias)-%}
          {%- else -%}
              {%- set standardise_suffix = "\n)), '\\n', '') \n, '\\t', '') \n, '\\v', '') \n, '\\r', '') AS STRING), '[ALL_NULL]'))), {})".format(zero_key)-%}
          {%- endif -%}

      {%- else -%}
   
          {%- if alias is not none -%}
              {%- set standardise_suffix = "\n), '\\n', '') \n, '\\t', '') \n, '\\v', '') \n, '\\r', '') AS STRING), '[ALL_NULL]'))), {}) AS {}".format(zero_key, alias)-%}
          {%- else -%}
              {%- set standardise_suffix = "\n), '\\n', '') \n, '\\t', '') \n, '\\v', '') \n, '\\r', '') AS STRING), '[ALL_NULL]'))), {})".format(zero_key)-%}
          {%- endif -%}

      {%- endif -%}

  {%- else -%}

      {%- if case_sensitive -%}

          {%- if alias is not none -%}
              {%- set standardise_suffix = "\n)), '\\n', '') \n, '\\t', '') \n, '\\v', '') \n, '\\r', '') AS STRING), '[ALL_NULL]')), {}) AS {}".format(zero_key, alias)-%}
          {%- else -%}
              {%- set standardise_suffix = "\n)), '\\n', '') \n, '\\t', '') \n, '\\v', '') \n, '\\r', '') AS STRING), '[ALL_NULL]')), {})".format(zero_key)-%}
          {%- endif -%}

      {%- else -%}

          {%- if alias is not none -%}
              {%- set standardise_suffix = "\n), '\\n', '') \n, '\\t', '') \n, '\\v', '') \n, '\\r', '') AS STRING), '[ALL_NULL]')), {}) AS {}".format(zero_key, alias)-%}
          {%- else -%}
              {%- set standardise_suffix = "\n), '\\n', '') \n, '\\t', '') \n, '\\v', '') \n, '\\r', '') AS STRING), '[ALL_NULL]')), {})".format(zero_key)-%}
          {%- endif -%}

      {%- endif -%}

  {%- endif -%}

  {{ standardise_suffix }}

  {%- endmacro -%}


  {%- macro datavault4coalesce__hash(columns, alias=none, datatype='STRING', algo='MD5') -%}

  {%- set concat_string = '||' -%}
  {%- set quote = '"' -%}
  {%- set null_placeholder_string = '^^' -%}

  {%- set hash_input_case_sensitive = datavault4coalesce.config.hash_input_case_sensitive -%}

  {#- Select hashing algorithm -#}
  {%- set datatype = datatype|upper -%}
  {%- set hash_alg = datavault4coalesce__hash_algorithm(hash_function=algo, hash_datatype=datatype) -%}
  {%- set unknown_key = datavault4coalesce__unknown_key(hash_function=algo, hash_datatype=datatype) -%}
  {%- set error_key = datavault4coalesce__error_key(hash_function=algo, hash_datatype=datatype) -%}

  {%- set ns = namespace(columns=[], all_null=[]) -%}

  {%- set attribute_standardise = datavault4coalesce__attribute_standardise() %}

  {%- set columns_input = columns -%}

  {%- for column in columns_input -%}
       {%- set ns.columns = ns.columns + [column.name] -%}
  {%- endfor -%}


  {%- set standardise_prefix = datavault4coalesce__standardise_prefix(case_sensitive=hash_input_case_sensitive, hash_alg=hash_alg, datatype=hash_dtype, alias=alias, zero_key=unknown_key) -%}
  {%- set standardise_suffix = datavault4coalesce__standardise_suffix(case_sensitive=hash_input_case_sensitive, hash_alg=hash_alg, datatype=hash_dtype, alias=alias, zero_key=unknown_key) -%}    

  {{ standardise_prefix }}

  {%- for column in columns -%}

      {%- set ns.all_null = ns.all_null + [null_placeholder_string] -%}

       {%- if datavault4coalesce.config.hash_passthrough_input_transformations -%}

            {%- set column_str = datavault4coalesce__as_constant(get_source_transform(column)) -%}

       {%- else -%}

            {%- if '.' in column.name %}
                 {% set column_str = column.name -%}
            {%- else -%}
                 {%- set column_str = datavault4coalesce__as_constant(column.name) -%}
            {%- endif -%}
       {%- endif -%}

      {{- "\nCOALESCE(({}), '{}')".format(attribute_standardise | replace('[EXPRESSION]', column_str) | replace('[QUOTE]', quote) | replace('[NULL_PLACEHOLDER_STRING]', null_placeholder_string), null_placeholder_string) | indent(4) -}}
      {{- ",'{}',".format(concat_string) if not loop.last -}}

      {%- if loop.last -%}

          {{ standardise_suffix | replace('[ALL_NULL]', ns.all_null | join("")) | indent(4) }}

      {%- else -%}

          {%- set ns.all_null = ns.all_null + [concat_string] -%}

      {%- endif -%}

  {%- endfor -%}

  {%- endmacro -%}





name: macro
packageInfo:
  id: SCALEFREE-DATAVAULT4COALESCE
  version: https://github.com/ScalefreeCOM/datavault4coalesce.git#main
type: Macro
